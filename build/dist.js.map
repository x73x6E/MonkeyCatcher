{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./scenes/playGround.js","webpack:///./scenes/statusBar.js","webpack:///./scenes/dialogWindow.js","webpack:///./game.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","playGround","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","active","Phaser","Scene","load","multiatlas","_this","holes","Set","monkeys","background","add","image","physics","sprite","monkeyFrameNames","anims","generateFrameNames","start","end","zeroPad","prefix","suffix","frames","frameRate","repeat","isGameOn","dialogWindow","scene","events","on","startGame","arrow","input","keyboard","createCursorKeys","time","dt","_this2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","iterator","next","done","monkey","a","Math","atan2","y","banana","x","setAngle","PI","moveToObject","overlap","box","delete","destroy","emit","size","createMonkey","displaceBox","endGame","showDialogWindow","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop","hole","setTexture","setTimeout","_iterator2","err","return","monkeyFactory","timeToNext","right","isDown","left","up","down","timeToRelease","console","log","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","clear","setRandomPosition","randomAngle","random","cos","sin","setScale","play","content","btn","score","dialog","getElement","setText","concat","layout","bringToTop","statusBar","statusBar_classCallCheck","statusBar_possibleConstructorReturn","statusBar_getPrototypeOf","scoreText","text","font","fill","dialogWindow_classCallCheck","dialogWindow_possibleConstructorReturn","dialogWindow_getPrototypeOf","scenePlugin","url","sceneKey","rexUI","roundRectangle","actions","createButton","space","title","action","top","bottom","align","setStrokeStyle","tweens","targets","scaleX","scaleY","ease","duration","yoyo","button","groupName","index","sendToBack","label","Game","type","AUTO","width","height","backgroundColor","default","parent"],"mappings":"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","file":"dist.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/build/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default class playGround extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: 'playGround',\r\n            active: true\r\n        })\r\n    }\r\n    preload() {\r\n        this.load.multiatlas('scene', 'assets/scene.json', 'assets')\r\n    }\r\n    create() {\r\n        this.holes = new Set()\r\n        this.monkeys = new Set()\r\n\r\n        this.background = this.add.image(0, 0, 'scene', 'grass_bg.png')\r\n        this.holes.add(this.physics.add.sprite(160, 300, 'scene', 'hole/hole_empty.png'))\r\n        this.holes.add(this.physics.add.sprite(640, 300, 'scene', 'hole/hole_empty.png'))\r\n        this.holes.add(this.physics.add.sprite(400, 150, 'scene', 'hole/hole_empty.png'))\r\n        this.holes.add(this.physics.add.sprite(400, 450, 'scene', 'hole/hole_empty.png'))\r\n\r\n        this.monkeyFrameNames = this.anims.generateFrameNames('scene', {\r\n            start: 1,\r\n            end: 3,\r\n            zeroPad: 2,\r\n            prefix: 'monkey/frame',\r\n            suffix: '.png'\r\n        })\r\n\r\n        this.anims.create({\r\n            key: 'running',\r\n            frames: this.monkeyFrameNames,\r\n            frameRate: 16,\r\n            repeat: -1\r\n        })\r\n\r\n        this.isGameOn = false\r\n\r\n        this.dialogWindow = this.scene.get('dialogWindow')\r\n\r\n        this.dialogWindow.events.on('startGame', () => {\r\n            this.startGame()\r\n        })\r\n\r\n        this.arrow = this.input.keyboard.createCursorKeys()\r\n    }\r\n    update(time, dt) {\r\n        if (!this.isGameOn) return\r\n\r\n        for (let monkey of this.monkeys) {\r\n            let a = Math.atan2(monkey.y - this.banana.y, monkey.x - this.banana.x)\r\n            monkey.setAngle(a * 180 / Math.PI + 90)\r\n            this.physics.moveToObject(monkey, this.banana, 60)\r\n\r\n            if (this.physics.overlap(monkey, this.box)) {\r\n                this.monkeys.delete(monkey)\r\n                monkey.destroy()\r\n\r\n                this.events.emit('addPoint')\r\n                if (this.monkeys.size === 0) this.createMonkey()\r\n                this.displaceBox()\r\n                continue\r\n            }\r\n            if (this.physics.overlap(monkey, this.banana)) {\r\n                this.endGame()\r\n                this.showDialogWindow(\"You don't have the banana now\", 'Play again!')\r\n            }\r\n            for (let hole of this.holes) {\r\n                if (this.physics.overlap(monkey, hole)) {\r\n                    hole.setTexture('scene', 'hole/hole_down.png')\r\n                    setTimeout(() => {\r\n                        hole.setTexture('scene', 'hole/hole_empty.png')\r\n                    }, 1500)\r\n                    this.endGame()\r\n                    this.showDialogWindow('The monkey fell into the hole', 'Play again!')\r\n                }\r\n            }\r\n        }\r\n\r\n        this.monkeyFactory.timeToNext -= dt * 1.3\r\n        if (this.monkeyFactory.timeToNext < 0) {\r\n            this.createMonkey()\r\n        }\r\n\r\n        if (this.arrow.right.isDown) {\r\n            this.banana.x += 3\r\n        } else if (this.arrow.left.isDown) {\r\n            this.banana.x -= 3\r\n        }\r\n        if (this.arrow.up.isDown) {\r\n            this.banana.y -= 3\r\n        } else if (this.arrow.down.isDown) {\r\n            this.banana.y += 3\r\n        }\r\n    }\r\n    startGame() {\r\n        this.box = this.physics.add.sprite(-100, -100, 'scene', 'box.png')\r\n        this.displaceBox()\r\n        this.banana = this.physics.add.sprite(400, 300, 'scene', 'banana.png')\r\n\r\n        this.monkeyFactory = {\r\n            timeToRelease: 10 * 1000,\r\n            timeToNext: 10 * 1000\r\n        }\r\n\r\n        this.createMonkey()\r\n\r\n        this.events.emit('startGame')\r\n\r\n        console.log('game started')\r\n        this.isGameOn = true\r\n    }\r\n    endGame() {\r\n        console.log('game ended')\r\n        this.isGameOn = false\r\n\r\n        for (let monkey of this.monkeys) {\r\n            monkey.destroy()\r\n        }\r\n        this.monkeys.clear()\r\n\r\n        this.banana.destroy()\r\n        this.box.destroy()\r\n    }\r\n    displaceBox() {\r\n        this.box.setRandomPosition(250, 250, 300, 100)\r\n    }\r\n    createMonkey() {\r\n        let randomAngle = 2 * Math.PI * Math.random(),\r\n            x = Math.cos(randomAngle) * 550 + 400,\r\n            y = Math.sin(randomAngle) * 550 + 300,\r\n            monkey\r\n\r\n        x = (x > 810) ? 810 : x\r\n        x = (x < -10) ? -10 : x\r\n        y = (y > 610) ? 610 : y\r\n        y = (y < -10) ? -10 : y\r\n\r\n        monkey = this.physics.add\r\n            .sprite(x, y, 'scene', 'monkey/frame01.png')\r\n            .setScale(1.3, 1.3)\r\n            .anims.play('running')\r\n\r\n        this.monkeys.add(monkey)\r\n\r\n        this.monkeyFactory.timeToRelease -= 0.5 * 1000\r\n        this.monkeyFactory.timeToNext = this.monkeyFactory.timeToRelease\r\n    }\r\n    showDialogWindow(content, btn) {\r\n        let score = this.scene.get('statusBar').score\r\n\r\n        this.dialogWindow.dialog.getElement('content').setText(`${content}\\nYour score was ${score}`)\r\n        this.dialogWindow.dialog.getElement('actions[0]').getElement('text').setText(btn)\r\n        this.dialogWindow.dialog.layout()\r\n        this.dialogWindow.scene.bringToTop()\r\n    }\r\n}","export default class statusBar extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: 'statusBar',\r\n            active: true\r\n        })\r\n        this.score = 0\r\n    }\r\n    create() {\r\n        this.scoreText = this.add.text(660, 20, `Score: ${this.score}`, {\r\n            font: '24px Verdana',\r\n            fill: '#ffffff'\r\n        })\r\n        //this.scoreText.setTint(0xcccccc)\r\n        //console.log(this.scoreText.displayWidth)\r\n\r\n        this.playGround = this.scene.get('playGround')\r\n        \r\n        this.playGround.events\r\n            .on('addPoint', () => {\r\n                this.score++\r\n                this.scoreText.setText(`Score: ${this.score}`)\r\n            })\r\n            .on('startGame', () => {\r\n                this.score = 0\r\n                this.scoreText.setText(`Score: ${this.score}`)\r\n            })\r\n    }\r\n}","export default class dialogWindow extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: 'dialogWindow',\r\n            active: true\r\n        })\r\n    }\r\n    preload() { \r\n        this.load.scenePlugin({\r\n            key: 'rexuiplugin',\r\n            url: 'https://raw.githubusercontent.com/rexrainbow/phaser3-rex-notes/master/plugins/dist/rexuiplugin.min.js',\r\n            sceneKey: 'rexUI'\r\n        })     \r\n    }\r\n    create() {\r\n        this.dialog = this.rexUI.add.dialog({\r\n                x: 400,\r\n                y: 300,\r\n\r\n                background: this.rexUI.add.roundRectangle(0, 0, 100, 100, 20, 0x1ba75a),\r\n\r\n                content: this.add.text(0, 0, 'Use the banana to catch monkeys', {\r\n                    font: '24px Verdana'\r\n                }),\r\n\r\n                actions: [\r\n                    this.createButton(this, 'Play!')\r\n                ],\r\n\r\n                space: {\r\n                    title: 25,\r\n                    content: 25,\r\n                    action: 15,\r\n\r\n                    left: 20,\r\n                    right: 20,\r\n                    top: 20,\r\n                    bottom: 20,\r\n                },\r\n          \r\n                align: {\r\n                    content: 'center',\r\n                    actions: 'center'      \r\n                }\r\n            })\r\n            .layout()\r\n            .setScale(0)\r\n        \r\n        this.dialog.getElement('background').setStrokeStyle(2, 0x389a64)\r\n\r\n        let tween = this.tweens.add({\r\n            targets: this.dialog,\r\n            scaleX: 1,\r\n            scaleY: 1,\r\n            ease: 'Bounce',\r\n            duration: 1000,\r\n            repeat: 0,\r\n            yoyo: false\r\n        })\r\n\r\n        this.dialog\r\n            .on('button.click', function (button, groupName, index) {\r\n                this.scene.sendToBack()\r\n                this.events.emit('startGame')\r\n\r\n            }, this)\r\n            .on('button.over', function (button, groupName, index) {\r\n                button.getElement('background').setStrokeStyle(2, 0xffffff)\r\n            })\r\n            .on('button.out', function (button, groupName, index) {\r\n                button.getElement('background').setStrokeStyle()\r\n            })\r\n    }\r\n    createButton(scene, text) {\r\n        return scene.rexUI.add.label({\r\n            background: scene.rexUI.add.roundRectangle(0, 0, 100, 40, 20, 0xe80e0e),\r\n    \r\n            text: scene.add.text(0, 0, text, {\r\n                font: '24px Verdana'\r\n            }),\r\n    \r\n            space: {\r\n                left: 30,\r\n                right: 30,\r\n                top: 10,\r\n                bottom: 10\r\n            }\r\n        })\r\n    }\r\n}","import playGround from './scenes/playGround'\r\nimport statusBar from './scenes/statusBar'\r\nimport dialogWindow from './scenes/dialogWindow'\r\n\r\nlet game = new Phaser.Game({\r\n    type: Phaser.AUTO,\r\n    width: 800,\r\n    height: 600,\r\n    backgroundColor: '#76be45',\r\n    physics: {\r\n        default: 'arcade'\r\n    },\r\n    parent: 'game-container',\r\n    scene: [playGround, statusBar, dialogWindow]\r\n})"],"sourceRoot":""}